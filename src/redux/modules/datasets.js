export const CHANGE_SELECTED = 'CHANGE_SELECTED';

const initialState = {
  list: [
    {
      id: 1,
      name: 'DIGITS',
      description: 'Сет состоит из предварительно обработанного сета NIST. Битмапы 32х32 разделены на блоки 4х4, где пиксели просчитаны и преобразованы в матрицы входа 8х8 со значениями от 0 до 16. Это уменьшает размерность входящих данных и дает инвариантность к малым искажениям',
    },
    {
      id: 2,
      name: 'Рак',
      description: 'База диагностирования рака груди (Висконсин) В этом сете представлены данные, собранные на основе оцифрованых изображений, полученых тонкоигольным аспиратом. Аттрибуты: 1) ID, 2) Диагноз (М - злокачественная, В - доброкачественная), 3-32) Для каждого ядра клетки вычисляются десять вещественных функций: радиус, текстура, периметр, площадь, вогнутость, сладость сосочков, точки вогнутости, симметричность, фрактальная размерность.',
    },
    {
      id: 3,
      name: 'Ирисы',
      description: 'Ирисы Фишера — классическая задача статистики и машинного обучения. Она состоит из данных о 150 экземплярах ириса, по 50 экземпляров из трёх видов — Ирис щетинистый (Iris setosa), Ирис виргинский (Iris virginica) и Ирис разноцветный (Iris versicolor). Для каждого экземпляра измерялись четыре характеристики',
    },
    {
      id: 4,
      name: 'sample dataset #4 name',
      description: 'dataset description',
    },
    {
      id: 5,
      name: 'MNIST',
      description: 'MNIST - огромная база рукописных цифр, признанная эталоном. Ее называют "Дрозофилой машинного обучения" за любовь исследователей к этому датасету. Задача, на первый взгляд, простая - обучить компьютер распознавать цифры, написанные от руки. База данных MNIST содержит 60000 изображений для обучения и 10000 изображений для тестирования. Рекомендуемый в оригинальной работе метод - метод опорных векторов, Однако, при должной сноровке, можно получить гораздо более точные результаты. Самые лучшие результаты были получены на сверточных нейронных сетях.',
      unavailable: true,
    },
    {
      id: 6,
      name: 'sample dataset #6 name',
      description: 'dataset description',
      unavailable: true,
    },
  ],
  selectedIndex: 0,
};

export default function time(state = initialState, action = {}) {
  switch (action.type) {
    case CHANGE_SELECTED:
      return {
        ...state,
        selectedIndex: data,
      };
    default:
      return state;
  }
}

export function changeSelected(index) {
  return {
    type: CHANGE_SELECTED,
    data: index,
  }
}
